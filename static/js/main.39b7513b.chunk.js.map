{"version":3,"sources":["components/Navbar.js","components/Hero.js","apis/unsplash.js","components/SearchForm.js","actions/index.js","components/ImageCard.js","components/ImageList.js","components/routes/Home.js","components/routes/MobileSearch.js","components/routes/SearchResults.js","components/routes/ImageDisplay.js","components/App.js","reducers/ImageClickedReducer.js","reducers/index.js","reducers/SearchFormReducer.js","reducers/NewImagesReducer.js","reducers/UserImagesReducer.js","index.js"],"names":["Navbar","className","to","Hero","title","description","component","Axios","create","baseURL","headers","Authorization","FormikSearchForm","withFormik","mapPropsToValues","searchQuery","handleSubmit","values","props","searchSubmit","history","push","id","type","placeholder","name","withRouter","connect","dispatch","a","unsplash","get","params","query","per_page","response","payload","data","results","handleImageClick","imageSource","imageAlt","getUserImages","userName","profileImage","image","altDescription","user","console","log","window","innerWidth","small","regular","onClick","full","src","alt","ownProps","searchResults","newImages","userImages","path","match","listName","imageList","map","result","key","profile_image","urls","alt_description","username","length","renderList","state","getNewImages","location","useEffect","scrollTo","Fragment","MobileSearch","SearchResults","clickedImage","App","exact","Home","ImageDisplay","ImageClickedReducer","action","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.39b7513b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './css/Navbar.css';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar-container\">\r\n      <Link className=\"nav-link\" to=\"/\">\r\n        <i className=\"fas fa-home nav-button\" />\r\n      </Link>\r\n      <h1>Picto</h1>\r\n      <Link className=\"nav-link\" to=\"/mobile-search\">\r\n        <i className=\"fas fa-search nav-button\" />\r\n      </Link>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport './css/Hero.css';\r\n\r\nconst Hero = ({ title, description, component }) => {\r\n  return (\r\n    <div className=\"hero-container\">\r\n      <h1 className=\"hero-title\">{title}</h1>\r\n      <p className=\"hero-description\">{description}</p>\r\n      {component}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n","import Axios from 'axios';\r\n\r\nexport default Axios.create({\r\n  baseURL: 'https://api.unsplash.com',\r\n  headers: {\r\n    'Accept-Version': 'v1',\r\n    Authorization:\r\n      'Client-ID fa683c2f1e2af1085687d7544e3806c0970b12aeaebf3b3e322ce59da9967a8e'\r\n  }\r\n});\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withFormik, Form, Field } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport { searchSubmit } from '../actions';\r\nimport './css/SearchForm.css';\r\n\r\nconst SearchForm = () => {\r\n  return (\r\n    <Form id=\"search\">\r\n      <Field\r\n        className=\"search-bar\"\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        name=\"searchQuery\"\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst FormikSearchForm = withFormik({\r\n  mapPropsToValues: () => ({ searchQuery: '' }),\r\n\r\n  handleSubmit: (values, { props }) => {\r\n    props.searchSubmit(values.searchQuery);\r\n    props.history.push(`/images/${values.searchQuery}`);\r\n  }\r\n})(SearchForm);\r\n\r\nexport default withRouter(\r\n  connect(\r\n    null,\r\n    {\r\n      searchSubmit\r\n    }\r\n  )(FormikSearchForm)\r\n);\r\n","import unsplash from '../apis/unsplash';\r\n\r\nexport const searchSubmit = searchQuery => {\r\n  return async dispatch => {\r\n    const response = await unsplash.get('/search/photos', {\r\n      params: {\r\n        query: searchQuery,\r\n        per_page: 15\r\n      }\r\n    });\r\n    dispatch({\r\n      type: 'SEARCH_SUBMIT',\r\n      payload: { response: response.data.results, query: searchQuery }\r\n    });\r\n  };\r\n};\r\n\r\nexport const getNewImages = () => {\r\n  return async dispatch => {\r\n    const response = await unsplash.get('/photos', {\r\n      params: {\r\n        per_page: 15\r\n      }\r\n    });\r\n    dispatch({\r\n      type: 'GET_NEW_IMAGES',\r\n      payload: { response: response.data }\r\n    });\r\n  };\r\n};\r\n\r\nexport const handleImageClick = (imageSource, imageAlt) => {\r\n  return {\r\n    type: 'IMAGE_CLICKED',\r\n    payload: { imageSource: imageSource, imageAlt: imageAlt }\r\n  };\r\n};\r\n\r\nexport const getUserImages = userName => {\r\n  return async dispatch => {\r\n    const response = await unsplash.get(`/users/${userName}/photos`, {\r\n      params: {\r\n        per_page: 15\r\n      }\r\n    });\r\n    dispatch({\r\n      type: 'GET_USER_IMAGES',\r\n      payload: response\r\n    });\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { handleImageClick, getUserImages } from '../actions';\r\n\r\nconst ImageCard = ({\r\n  profileImage,\r\n  userName,\r\n  image,\r\n  altDescription,\r\n  id,\r\n  handleImageClick,\r\n  getUserImages,\r\n  user\r\n}) => {\r\n  console.log(image);\r\n  let imageSource = '';\r\n\r\n  window.innerWidth < 1024\r\n    ? (imageSource = image.small)\r\n    : (imageSource = image.regular);\r\n\r\n  return (\r\n    <Link\r\n      onClick={() => {\r\n        handleImageClick(image.full, altDescription);\r\n        getUserImages(user);\r\n      }}\r\n      to={`/display-image/${id}`}\r\n    >\r\n      <div className=\"image-card-container\">\r\n        <div className=\"image-card-user-container\">\r\n          <img\r\n            src={profileImage}\r\n            alt=\"Profile\"\r\n            className=\"image-card-profile-picture\"\r\n          />\r\n          <h2 className=\"image-card-user-name\">{userName}</h2>\r\n        </div>\r\n        <img\r\n          className=\"image-card-thumbnail\"\r\n          src={imageSource}\r\n          alt={altDescription}\r\n        />\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  {\r\n    handleImageClick,\r\n    getUserImages\r\n  }\r\n)(ImageCard);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ImageCard from './ImageCard';\r\nimport './css/ImageList.css';\r\n\r\nconst ImageList = ({\r\n  searchResults,\r\n  path,\r\n  newImages,\r\n  listName,\r\n  userImages\r\n}) => {\r\n  const renderList = searchResults => {\r\n    if (path === '/' && newImages) {\r\n      return newImages.map(result => {\r\n        return (\r\n          <ImageCard\r\n            key={result.id}\r\n            profileImage={result.user.profile_image.small}\r\n            userName={result.user.name}\r\n            image={result.urls}\r\n            altDescription={result.alt_description}\r\n            id={result.id}\r\n            user={result.user.username}\r\n          />\r\n        );\r\n      });\r\n    }\r\n\r\n    if (userImages && listName && userImages.length === 0) {\r\n      return newImages.map(result => {\r\n        return (\r\n          <ImageCard\r\n            key={result.id}\r\n            profileImage={result.user.profile_image.small}\r\n            userName={result.user.name}\r\n            image={result.urls}\r\n            altDescription={result.alt_description}\r\n            id={result.id}\r\n            user={result.user.username}\r\n          />\r\n        );\r\n      });\r\n    }\r\n\r\n    if (userImages && listName) {\r\n      return userImages.map(result => {\r\n        return (\r\n          <ImageCard\r\n            key={result.id}\r\n            profileImage={result.user.profile_image.small}\r\n            userName={result.user.name}\r\n            image={result.urls}\r\n            altDescription={result.alt_description}\r\n            id={result.id}\r\n            user={result.user.username}\r\n          />\r\n        );\r\n      });\r\n    }\r\n\r\n    if (!searchResults) {\r\n      return null;\r\n    }\r\n\r\n    return searchResults.map(result => {\r\n      return (\r\n        <ImageCard\r\n          key={result.id}\r\n          profileImage={result.user.profile_image.small}\r\n          userName={result.user.name}\r\n          image={result.urls}\r\n          altDescription={result.alt_description}\r\n          id={result.id}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  const imageList = renderList(searchResults);\r\n\r\n  return (\r\n    <div className=\"image-container-section\">\r\n      <h1>{listName}</h1>\r\n      <div className=\"image-list-container\">{imageList}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (\r\n  { searchResults, newImages, userImages },\r\n  ownProps\r\n) => {\r\n  return {\r\n    path: ownProps.match.path,\r\n    searchResults: searchResults.response,\r\n    query: searchResults.query,\r\n    newImages: newImages.response,\r\n    userImages: userImages.data\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(ImageList));\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Hero from '../Hero';\r\nimport SearchForm from '../SearchForm';\r\nimport ImageList from '../ImageList';\r\nimport { getNewImages } from '../../actions';\r\n\r\nconst Home = ({ getNewImages, newImages, location }) => {\r\n  if (newImages.length === 0) {\r\n    getNewImages();\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Hero\r\n        title=\"Picto\"\r\n        description=\"Picto is a React and Redux application. It pulls data from Unsplash's API to provide royalty-free, no-attribuation images.\"\r\n        component={<SearchForm />}\r\n      />\r\n      <ImageList listName=\"New Images\" />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { newImages: state.newImages };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getNewImages }\r\n)(Home);\r\n","import React from 'react';\r\nimport SearchForm from '../SearchForm';\r\n\r\nconst MobileSearch = () => {\r\n  return <SearchForm />;\r\n};\r\n\r\nexport default MobileSearch;\r\n","import React, { useEffect } from 'react';\r\nimport ImageList from '../ImageList';\r\nimport Hero from '../Hero';\r\nimport SearchForm from '../SearchForm';\r\n\r\nconst SearchResults = () => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  });\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Hero\r\n        title=\"Picto\"\r\n        description=\"Picto uses Unsplash’s developer API to retrieve images and was built\r\n        using React.\"\r\n        component={<SearchForm />}\r\n      />\r\n      <ImageList />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport ImageList from '../ImageList';\r\nimport '../css/ImageDisplay.css';\r\n\r\nconst ImageDisplay = ({ image }) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  });\r\n\r\n  return (\r\n    <div className=\"image-display-container\">\r\n      <img\r\n        className=\"image-single-page\"\r\n        src={image.imageSource}\r\n        alt={image.imageAlt}\r\n      />\r\n      <ImageList listName=\"Similar images\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return { image: state.clickedImage };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(ImageDisplay));\r\n","import React from 'react';\r\nimport { HashRouter as Router, Route } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\nimport Home from './routes/Home';\r\nimport MobileSearch from './routes/MobileSearch';\r\nimport SearchResults from './routes/SearchResults';\r\nimport ImageDisplay from './routes/ImageDisplay';\r\nimport './css/global.css';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Navbar />\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/mobile-search\" component={MobileSearch} />\r\n        <Route path=\"/images/:id\" component={SearchResults} />\r\n        <Route path=\"/display-image/:id\" component={ImageDisplay} />\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const ImageClickedReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'IMAGE_CLICKED':\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ImageClickedReducer;\r\n","import { combineReducers } from 'redux';\r\nimport SearchFormReducer from './SearchFormReducer';\r\nimport NewImagesReducer from './NewImagesReducer';\r\nimport ImageClickedReducer from './ImageClickedReducer';\r\nimport UserImagesReducer from './UserImagesReducer';\r\n\r\nexport default combineReducers({\r\n  searchResults: SearchFormReducer,\r\n  newImages: NewImagesReducer,\r\n  clickedImage: ImageClickedReducer,\r\n  userImages: UserImagesReducer\r\n});\r\n","export default (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'SEARCH_SUBMIT':\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'GET_NEW_IMAGES':\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'GET_USER_IMAGES':\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(reducers, composeEnhancer(applyMiddleware(thunk)));\r\n\r\nReactDom.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}